

/*
(제한시간 : C/C++ 3000ms, java 6000ms)

멤버십 회원들이 힘을 모아 다른 행성을 점령하기 위해 우주선을 개발하였다. 행성을 점령하기 위해서는 행성 안에 있는 모든 외계인들을 폭탄 낙하하여 모두 제거 해야지만 그 행성을 점령할 수 있다.
은하계는 XY (좌표)면으로 되어 있으며 N개의 행성이 존재한다. 우주선은 한번 이동 시 직선으로 이동하며, 대각선 방향으로도 이동이 가능하다. 이동경로에 있는 동일 직선상의 행성들에게 폭탄을 투하할 수 있으며, 폭탄은 이동이 끝나면 동시에 터져 행성을 점령 할 수가 있다. 점령이 끝나면 우주선은 순간이동 포탈을 이용하여 다른 시작점으로 이동하기 때문에 우주선 이동이 멈춘 곳에서 다음 폭탄투하를 시작할 필요는 없다.
(단. 동일선상에 있는 행성에게 모두 폭탄을 투여할 필요는 없다.)
우주선의 목표는 가장 최소한의 이동으로 모든 행성들을 점령하는 것이다.

다음의 두 가지 조건 모두를 만족시켜야 한다.
•	최소한의 이동으로 모든 행성을 점령한다.
•	다양한 이동방법으로 행성을 점령한다. 만일 각기 다른 차례로 행성이 점령된다면, 그것은 다른 방법으로 여겨진다.

입력
첫째줄은 테스트 케이스를 입력한다. 각각의 테스트케이스의 첫째 줄에 N(행성의 수)을 포함하고, 다음 줄은 외계인이 위치한 장소를 좌표화하는 N줄을 입력한다.

출력
모든 행성을 점령하는데 필요한 우주선의 최소한의 이동과 그 최소한의 이동으로 외계인들을 제거하는 방법의 수를 출력한다.

1000000007 나눈 나머지를 출력한다.

제한
1 <= N <= 16
0 <= x,y <= 100
똑 같은 좌표를 가지는 두 행성은 없어야 한다.

[STL사용 불가]


입력 샘플
2
3
0 0
0 1
1 0
4
3 4
3 5
3 6
5 5

출력 샘플
2 6
2 8


테스트케이스 설명
첫 번째 Input좌표를 p1(0,0), p2(0,1), p3(1,0)라 부르면 아래와 같은 방법으로 제거된다.
a. 1) p1,p2  2) p3
b. 1) p1,p3  2) p2
c. 1) p2,p3  2) p1
d. 1) p3  2) p1,p2
e. 1) p2  2) p1,p3
f. 1) p1  2) p3,p2
*/