#include <stdio.h>
int main(){
	int testcase;
	scanf("%d", &testcase);
	for (int i = 0; i < testcase; i++){
		printf("#testcase%d\n", i + 1);

	}

	return 0;
}

/*
좁은 길

좁은 길 안에 몇 마리의 늑대들이 일렬로 있다. 그 길은 너무 좁아서 몇몇의 늑대들은 서로 지나쳐갈 수 없다. 정확히 말하자면, 임의의 인접한 두 늑대들의 크기의 합이 maxSizeSum 보다 작거나 같은 경우에만 두 늑대의 위치를 바꿀 수 있다. 늑대들은 좁은 길 안에서 도망칠 수 없고 서로 인접한 늑대들만이 위치를 바꿀 수 있다. 이러한 상황에서 늑대들을 배치할 수 있는 방법의 수는 총 몇 가지나 있겠는가 ? 늑대들의 크기가 같더라도 그들의 번호에 따라 다른 늑대라고 가정한다.

입력 형식
첫줄에 테스트케이스의 개수 T가 주어진다. 다음 줄부터 T개의 테스트케이스에 대하여, 첫 줄에 늑대의 수 N ( 1 <= N <= 6 ) 와 maxSizeSum ( 1 <= maxSizeSum <=1000 ) 이 주어진다. 다음 줄부터 N 개의 숫자로 늑대들의 크기가 주어진다.

출력 형식
답을 출력하기 전에 각 테스트케이스의 순서에 따라 “#testcase1”“#testcase2”... 을 출력한다. 그 다음에 각 테스트케이스에 대하여, 늑대를 배치할 수 있는 모든 경우의 수를 출력한다.

예제 입력
2
3 1000
1 2 3
3 4
1 2 3


예제 출력
#testcase1
6
#testcase2
3


*/